# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference.
version: 2.1
orbs:
  python: circleci/python@2.1.1


jobs:
  test_and_linting:
    docker:
      - image: cimg/python:3.10.6
    steps:
      - checkout
      - run:
          name: create venv and install dependencies
          command: |
            python -m venv myvenv
            source myvenv/bin/activate
            pip install -r requirements.txt
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: pytest
      - run:
          name: Run flake8
          command: flake8 --exclude myvenv,lettings/migrations,oc_lettings_site/migrations,profiles/migrations
  publishLatestToHub:
    docker:
      - image: cimg/python:3.10.6
        auth:
          # ensure you have first added these secrets
          # visit app.circleci.com/settings/project/github/Kmenguete/OpenClassrooms_project13/environment-variables
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - setup_remote_docker:
            version: 20.10.18
      - checkout
      - run:
          name: build docker image and push it to docker hub
          command: |
            docker build -t $CIRCLE_SHA1 --no-cache .
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD" docker.io
            docker tag $CIRCLE_SHA1 kevin976/circleci:$CIRCLE_SHA1
            docker push kevin976/circleci:$CIRCLE_SHA1
  deploy:
    docker:
      - image: cimg/python:3.10.6
        auth:
          # ensure you have first added these secrets
          # visit app.circleci.com/settings/project/github/Kmenguete/OpenClassrooms_project13/environment-variables
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - setup_remote_docker:
            version: 20.10.18
      - checkout
      - run:
          name: Deploy Docker image to Heroku
          command: |
            echo "${HEROKU_API_KEY}" | docker login --username=_ --password-stdin registry.heroku.com
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            my_apps=$(heroku apps)
            existing_app=0
            for app in $my_apps; 
              do if [ $app = "$HEROKU_APP_NAME" ]; 
                then existing_app=1; 
              fi done
            if [ $existing_app = 0 ];
              then heroku create --app ${HEROKU_APP_NAME};
            fi
            heroku container:push web --app ${HEROKU_APP_NAME}
            heroku container:release web --app ${HEROKU_APP_NAME}
            heroku ps:scale web=1 --app ${HEROKU_APP_NAME}
      

workflows:
  my_custom_workflow:
    jobs:
      - test_and_linting
      - publishLatestToHub:
          requires:
            - test_and_linting
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - publishLatestToHub
          filters:
            branches:
              only: master
